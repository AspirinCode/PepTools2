}
get_iris_sample()
get_iris_sample()
lapply(1:10, get_iris_sample)
lapply(1:50, get_iris_sample)
source('~/.active-rstudio-document')
d
do.call(rbind, d)
d = lapply(1:50, function(i){
iris %>% group_by(Species) %>% sample_n(1) %>% ungroup %>% return
})
do.call(rbind, d)
d = sapply(1:50, function(i){
iris %>% group_by(Species) %>% sample_n(1) %>% ungroup %>% return
})
d
source('~/.active-rstudio-document')
do.call(rbind, d)
do.call(rbind, d) %>% distinct()
iris
iris %>% group_by(Species) %>% sample_n(50) %>% ungroup %>% return
iris %>% group_by(Species) %>% sample_n(1000) %>% distinct
iris %>% group_by(Species) %>% sample_n(1000, replace = TRUE) %>% distinct
iris %>% group_by(Species) %>% sample_n(1000, replace = TRUE) %>% distinct %>%
sample(50) %>% ungroup
iris %>% group_by(Species) %>% sample_n(10000, replace = TRUE) %>% distinct %>%
sample(50) %>% ungroup
iris %>% group_by(Species) %>% sample_n(1000, replace = TRUE) %>% distinct %>%
sample_n(50) %>% ungroup
iris %>% group_by(Species) %>% sample_n(10000, replace = TRUE) %>% distinct %>%
sample_n(50) %>% ungroup
iris %>% group_by(Species) %>% sample_n(100000, replace = TRUE) %>% distinct %>%
sample_n(50) %>% ungroup
library(PepTools2)
BLOSUM50
str(BLOSUM50)
prcomp(x = BLOSUM50, center = TRUE, scale. = TRUE)
PCA_BLOSUM_50 = prcomp(x = BLOSUM50, center = TRUE, scale. = TRUE)
summary(PCA_BLOSUM_50)
library('tidyverse')
PCA_BLOSUM_50 = prcomp(x = BLOSUM50, center = TRUE, scale. = TRUE)
PCA_BLOSUM_50
PCA_BLOSUM_50$x
?prcomp
BLOSUM50["A",]
BLOSUM50[,"A"]
m = matrix(data = rnorm(100), nrow = 10, ncol = 10, dimnames = list(paste0('v',1:10),paste0('s',1:10)))
m
m = matrix(data = rnorm(100), nrow = 10, ncol = 10, dimnames = list(paste0('v',1:10),paste0('v',1:10)))
m
m = matrix(data = rnorm(100), nrow = 10, ncol = 10, dimnames = list(paste0('s',1:10),paste0('v',1:10)))
m
prcomp(m)
prcomp(m)$x
source('~/.active-rstudio-document')
PCA_BLOSUM_50
PCA_BLOSUM_50$rotation %>% as_tibble
rownames_to_column(PCA_BLOSUM_50$x)
rownames_to_column(PCA_BLOSUM_50$rotation)
str(PCA_BLOSUM_50$rotation)
rownames_to_column(as.data.frame(PCA_BLOSUM_50$rotation))
rownames_to_column(as.data.frame(PCA_BLOSUM_50$rotation)) %>% str
rownames_to_column(as.data.frame(PCA_BLOSUM_50$rotation)) %>% as_tibble
rownames_to_column(as.data.frame(PCA_BLOSUM_50$rotation)) %>% as_tibble %>% str
rownames_to_column(as.data.frame(PCA_BLOSUM_50$rotation)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw()
rownames_to_column(as.data.frame(PCA_BLOSUM_50$x)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw()
dev.off()
source('~/.active-rstudio-document')
rownames_to_column(as.data.frame(PCA_BLOSUM_62$rotation)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw() +
coord_fixed()
rownames_to_column(as.data.frame(PCA_BLOSUM_62$x)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw() +
coord_fixed()
source('~/.active-rstudio-document')
# PCA plot
bl62_pca %>%
ggbiplot(groups = bl62_mat$chemistry, ellipse = TRUE, circle = TRUE) +
geom_point(colour = "white") +
geom_text(aes(label=rownames(bl62_pca$rotation),colour=bl62_mat$chemistry)) +
theme_bw()
# Scree plot
bl62_pca %>%
ggscreeplot() +
theme_bw()
# PCA plot
bl62_pca %>%
ggbiplot(groups = bl62_mat$chemistry, ellipse = TRUE, circle = TRUE) +
geom_point(colour = "white") +
geom_text(aes(label=rownames(bl62_pca$rotation),colour=bl62_mat$chemistry)) +
theme_bw()
source('~/.active-rstudio-document')
dev.off()
source('~/.active-rstudio-document')
rownames_to_column(as.data.frame(PCA_BLOSUM_62$rotation)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw() +
coord_fixed()
rownames_to_column(as.data.frame(PCA_BLOSUM_62$x)) %>% as_tibble %>%
ggplot(aes(x = PC1, y = PC2, label = rowname)) +
geom_text() +
theme_bw() +
coord_fixed()
library('tidyverse')
PCA_BLOSUM_62 = prcomp(x = BLOSUM50, center = TRUE, scale. = TRUE)
source('~/.active-rstudio-document')
PCA_BLOSUM_62 = prcomp(x = BLOSUM50, center = TRUE, scale. = TRUE)
m = matrix(data = rnorm(100), nrow = 10, ncol = 10, dimnames = list(paste0('s',1:10),paste0('v',1:10)))
prcomp(m)$x
prcomp(m)$rot
prcomp(m)$x %>% apply(1, function(x){ (x - mean(x)) / sd(x) })
prcomp(m)$x %>% apply(1, function(x){ (x - mean(x)) / sd(x) }) %>% t
prcomp(m)$rot %>% apply(1, function(x){ (x - mean(x)) / sd(x) }) %>% t
prcomp(m)$x %>% apply(2, function(x){ (x - mean(x)) / sd(x) }) %>% t
prcomp(m)$rot %>% apply(2, function(x){ (x - mean(x)) / sd(x) }) %>% t
BLOSUM62
?prcomp
source('~/.active-rstudio-document')
PCA_BLOSUM_62
PCA_BLOSUM_62$x
source('~/.active-rstudio-document')
PCA_BLOSUM_62$x
strsplit(x = 'ANGLKFV', split = '')
?unlist
strsplit(x = 'ANGLKFV', split = '')[[1]]
source('~/.active-rstudio-document')
X
source('~/.active-rstudio-document')
X
p
X[,p]
X[p, ]
X[p, 1:12]
PCA_BLOSUM_62
summary(PCA_BLOSUM_62)
source('~/.active-rstudio-document')
summary(PCA_BLOSUM_62)
summary(PCA_BLOSUM_50)
X[p, 1:10]
source('~/.active-rstudio-document')
m
matrix(m, nrow = 1)
matrix(m, nrow = 1, byrow = TRUE)
matrix(m, nrow = 1, byrow = FALSE)
matrix(m, nrow = 1, byrow = TRUE)
m
matrix(t(m), nrow = 1, byrow = TRUE)
matrix(t(m), nrow = 1, byrow = TRUE)[1,]
BLOSUM50
BLOSUM50_enc
X
BLOSUM50
str(BLOSUM50)
BLOSUM50$X = rep(x = 0, times = nrow(BLOSUM50))
BLOSUM50
library('PepTools2')
BLOSUM50
rm(list=ls())
BLOSUM50
source('~/.active-rstudio-document')
BLOSUM50_X
BLOSUM50_X["X",] = rep(0, ncol(BLOSUM50_X))
BLOSUM50_X
BLOSUM50_X   = BLOSUM50
BLOSUM50_X
BLOSUM50_X[,"X"] = rep(0, nrow(BLOSUM50_X))
BLOSUM50_X["X",] = rep(0, ncol(BLOSUM50_X))
BLOSUM50_X
str(BLOSUM50_X)
source('~/.active-rstudio-document')
PCA_BLOSUM50_X
runif(n = 10, min = -1, max = 1)
source('~/.active-rstudio-document')
PCA_BLOSUM50_X
PCA_BLOSUM50_X$x
summary(PCA_BLOSUM50_X)
source('~/.active-rstudio-document')
PCA_BLOSUM50_X
PCA_BLOSUM62_X
summary(PCA_BLOSUM62_X)
dev.off()
summary(PCA_BLOSUM50_X)
BLOSUM50
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
matrix(t(m), nrow = 1, byrow = TRUE)[1,]
m
??pssm_flatten
PepTools2::pssm_flatten
PCA_BLOSUM50_X
PCA_BLOSUM62_X
source('~/.active-rstudio-document')
BLOSUM50_pca
BLOSUM62_pca
BLOSUM50_pca = prcomp(x = BLOSUM50_X, center = TRUE, scale. = TRUE)$x
BLOSUM62_pca = prcomp(x = BLOSUM62_X, center = TRUE, scale. = TRUE)$x
BLOSUM50_pca
BLOSUM62_pca
str(BLOSUM62_pca)
pep_encode
BLOSUM50_enc
str(BLOSUM50_enc)
str(BLOSUM50_pca)
# Based on the BLOSUM50 matrix, do a PCA aiming at reducing number of
# encoding values needed per amino acid
# Tue Dec  4 11:30:32 2018 ------------------------------
# Run as .set_BLOSUM50_pca_matrix
.set_BLOSUM50_pca_matrix = function(){
# Add 'X' row
BLOSUM50_X = BLOSUM50
BLOSUM50_X['X',] = rep(0, ncol(BLOSUM50_X))
# Do PCA and get and set rotated matrix
BLOSUM50_pca = prcomp(x = BLOSUM50_X, center = TRUE, scale. = TRUE)$x
# Save data
save(BLOSUM50_pca, file = "data/BLOSUM50_pca.RData")
# Done
return(0)
}
# Based on the BLOSUM62 matrix, do a PCA aiming at reducing number of
# encoding values needed per amino acid
# Tue Dec  4 11:31:07 2018 ------------------------------
# Run as .set_BLOSUM62_pca_matrix()
.set_BLOSUM62_pca_matrix = function(){
# Add 'X' row
BLOSUM62_X = BLOSUM62
BLOSUM62_X['X',] = rep(0, ncol(BLOSUM62_X))
# Do PCA and get and set rotated matrix
BLOSUM62_pca = prcomp(x = BLOSUM62_X, center = TRUE, scale. = TRUE)$x
# Save data
save(BLOSUM62_pca, file = "data/BLOSUM62_pca.RData")
# Done
return(0)
}
.set_BLOSUM62_pca_matrix()
.set_BLOSUM50_pca_matrix()
library(PepTools2)
rm(list=ls())
library(PepTools2)
BLOSUM50_pca
roxygen2::roxygenise()
library(PepTools2)
peps = pep_ran(10, 9)
peps
pep_encode(pep = peps, mat = "BLOSUM50")
pep_encode(pep = peps, mat = "BLOSUM50") %>% dim()
pep_encode(pep = peps, mat = "BLOSUM50_pca") %>% dim()
is.null(mat_enc)
exists(mat_enc)
is.object(mat_enc)
exists("mat_enc")
mat_enc = 2
exists("mat_enc")
library(PepTools2)
pep_encode(pep = peps, mat = "BLOSUM50_pca") %>% dim()
library(PepTools2)
pep_encode(pep = peps, mat = "BLOSUM50_pca") %>% dim()
library(PepTools2)
library(PepTools2)
pep_encode(pep = peps, mat = "BLOSUM50_pca") %>% dim()
library(PepTools2)
pep_encode(pep = peps, mat = "BLOSUM50_pca") %>% dim()
BLOSUM62_pca
roxygen2::roxygenise()
library(PepTools2)
pep_encode(pep = peps, mat = "BLOSUM50_pca", n_pcs = 12) %>% dim()
pep_encode(pep = peps, mat = "BLOSUM62_pca", n_pcs = 12) %>% dim()
source('~/.active-rstudio-document')
library(PepTools2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
out
source('~/.active-rstudio-document')
out
source('~/.active-rstudio-document')
out
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
out
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
roxygen2::roxygenise()
library(PepTools2)
library(PepTools2)
roxygen2::roxygenise()
library(PepTools2)
pep_chop
pep_chop
roxygen2::roxygenise()
library(PepTools2)
roxygen2::roxygenise()
BGFREQS
?BGFREQS
pep_ran(10, 9)
?PEPTIDES
devtools::install_github("omarwagih/ggseqlogo")
ggseqlogo::ggseqlogo(PEPTIDES)
citation("PepTools2")
dev.off()
library(PepTools2)
roxygen2::roxygenise()
library(PepTools2)
citation('PepTools2')
roxygen2::roxygenise()
library(PepTools2)
citation('PepTools2')
roxygen2::roxygenise()
library(PepTools2)
citation('PepTools2')
kullback_leibler(PEPTIDES)
pep_ran(10, 9)
pep_ran(10, 9) %>% ggseqlogo
library('tidyverse')
pep_ran(10, 9) %>% ggseqlogo
library('ggseqlogo')
pep_ran(10, 9) %>% ggseqlogo
pep_ran(100, 9) %>% ggseqlogo
pep_ran(100, 9) %>% ggseqlogo
dev.off()
dev.off()
pssm_empty()
pssm_empty(9)
pssm_counts()
pssm_counts(PEPTIDES)
PEPTIDES
PEPTIDES
PEPTIDES %>% ggseqlogo()
roxygen2::roxygenise()
library(PepTools2)
roxygen2::roxygenise()
library(PepTools2)
library("tidyverse")
library("ggseqlogo")
my_peps = pep_ran(n = 1000, k = 9)
my_peps
head(my_peps)
head(my_peps, 10)
ggseqlogo(my_peps)
PEPTIDES
length(PEPTIDES)
head(PEPTIDES, 10)
ggseqlogo(PEPTIDES)
pssm_counts(PEPTIDES)
??KLD
kullback_leibler()
kullback_leibler
kullback_leibler(PEPTIDES)
shannon_entropy()
shannon_entropy(PEPTIDES)
information_content(PEPTIDES)
information_content(PEPTIDES)$IC_logo_aa_height
information_content(PEPTIDES)$IC_logo_aa_height %>% ggseqlogo(method = "custom")
information_content(PEPTIDES)$IC_logo_aa_height %>% ggseqlogo(method = "costum")
information_content(PEPTIDES)$IC_logo_aa_height %>% ggseqlogo(method = "custom")
information_content(PEPTIDES)$IC_logo_aa_height %>% ggseqlogo(data =., method = "custom")
information_content(PEPTIDES)$IC_logo_aa_height %>% ggseqlogo(seq_type = "aq", method = "custom")
information_content(PEPTIDES)$IC_logo_aa_height
information_content(PEPTIDES)$IC_logo_aa_height %>% str
d = information_content(PEPTIDES)$IC_logo_aa_height
ggseqlogo(d, method = "custom")
ggseqlogo(d, method = "custom", seq_type = "other")
ggseqlogo(d)
ggseqlogo(d, seq_type = "aa")
ggseqlogo(d, method='custom', seq_type='aa')
d
ggseqlogo(as.matrix(d), method='custom', seq_type='aa')
ggseqlogo(as.matrix(d), method='custom')
devtools::install_github("omarwagih/ggseqlogo")
devtools::install_github("omarwagih/ggseqlogo", force = TRUE)
library("ggseqlogo")
custom_mat = matrix( rnorm(20), nrow=4, dimnames=list(c('A', 'T', 'G', 'C')))
ggseqlogo(custom_mat, method='custom', seq_type='dna') + ylab('my custom height')
custom_mat
ggseqlogo(t(d), method='custom')
ggseqlogo(PEPTIDES)
dev.off()
d = kullback_leibler(PEPTIDES)$KLD_logo_aa_height
ggseqlogo(t(d), method='custom')
pssm_counts(PEPTIDES)
BGFREQS
d = kullback_leibler(PEPTIDES)
d
pssm_counts()
pssm_counts(PEPTIDES)
pssm_counts
pssm_empty(9)
pssm_freqs(PEPTIDES)
pssm_freqs
pssm_freqs(PEPTIDES) %>% rowSums()
p_mat = pssm_freqs(PEPTIDES)
p_mat
BGFREQS
BGFREQS["All"]
BGFREQS["All",]
BGFREQS["All","V"]
source('~/.active-rstudio-document')
p_mat
colnames(kld_mat)
kld_mat = p_mat
colnames(kld_mat)
source('~/.active-rstudio-document')
p_mat
kld_mat
m1 = matrix(1:6, nrow = 2)
m1 = m2
m2 = m1
m1*m2
m1
m2
p_mat
source('~/.active-rstudio-document')
kld_mat
source('~/.active-rstudio-document')
kld_mat
source('~/.active-rstudio-document')
kld_pos
kld_mat
sign(kld_mat)
p_mat
kld_pos = rowSums(kld_mat)
kld_pos
apply(p_mat, 2, function(x){ return(x * kld_pos) })
source('~/.active-rstudio-document')
pssm
source('~/.active-rstudio-document')
pssm
p_mat
BGFREQS
source('~/.active-rstudio-document')
pssm
kullback_leibler(PEPTIDES)$KLD_logo_aa_height
kullback_leibler(PEPTIDES)$KLD_logo_aa_height %>% t %>% ggseqlogo(method = "custom")
BGFREQS
source('~/.active-rstudio-document')
kullback_leibler(PEPTIDES, aa_background_distribution = "Eukaryota")$KLD_logo_aa_height %>% t %>% ggseqlogo(method = "custom")
PEPTIDES %>% kullback_leibler(aa_background_distribution = "Eukaryota")$KLD_logo_aa_height %>% t %>% ggseqlogo(method = "custom")
kullback_leibler(PEPTIDES, aa_background_distribution = "Eukaryota")$KLD_logo_aa_height %>% t %>% ggseqlogo(method = "custom")
kullback_leibler(PEPTIDES, aa_background_distribution = "Eukaryota") %>% pluck(KLD_logo_aa_height) %>% t %>% ggseqlogo(method = "custom")
kullback_leibler(PEPTIDES, aa_background_distribution = "Eukaryota") %>% pluck("KLD_logo_aa_height") %>% t %>% ggseqlogo(method = "custom")
PEPTIDES %>% kullback_leibler(aa_background_distribution = "Eukaryota") %>% pluck("KLD_logo_aa_height") %>% t %>% ggseqlogo(method = "custom")
test = pep_ran(1, k = 100)
pep_chop(test, 9)
pep_chop(test, 9) %>% pluck(1)
gag = "MGARASVLSGGKLDKWEKIRLRPGGKKTYQLKHIVWASRELERFAVNPGLLETGGGCKQILVQLQPSLQT
GSEELKSLYNAVATLYCVHQGIEVRDTKEALDKIEEEQNKSKKKAQQAAADTGNSSQVSQNYPIVQNLQG
QMVHQAISPRTLNAWVKVIEEKAFSPEVIPMFSALSEGATPQDLNTMLNTVGGHQAAMQMLKETINEEAA
EWDRLHPAHAGPNAPGQMREPRGSDIAGTTSTLQEQIGWMTSNPPVPVGEIYKRWIILGLNKIVRMYSPV
SILDIRQGPKEPFRDYVDRFYKTLRAEQASQDVKNWMTETLLVQNANPDCKTILKALGPAATLEEMMTAC
QGVGGPSHKARILAEAMSQVTSPANIMMQRGNFRNQRKTIKCFNCGKEGHLARHCRAPRKKGCWKCGREG
HQMKDCTERQANFLGKIWPSHKGRPGNFLQSRPEPTAPPEESFRFGEETTTPPQKQEPLPSQKQETIDKD
LYPLASLKSLFGNDPSLQ"
gag
read_fasta(file = '~/Downloads/sequence.fasta')
d = read_fasta(file = '~/Downloads/sequence.fasta')
str(d)
d
d$sequence
pssm_counts(PEPTIDES)
pssm_freqs(PEPTIDES)
pssm_freqs(PEPTIDES) %>% rowSums()
read_fasta(file = '~/Downloads/sequence (1).fasta')
read_fasta(file = '~/Downloads/sequence (1).fasta')$sequence
read_fasta(file = '~/Downloads/sequence (1).fasta')$sequence[1]
my_seq = read_fasta(file = '~/Downloads/sequence (1).fasta')$sequence[1]
(my_seq = read_fasta(file = '~/Downloads/sequence (1).fasta')$sequence[1])
my_peps = pep_chop(my_seq, 9)
my_peps
length(my_peps)
my_peps = pep_chop(my_seq, 9)
length(my_peps)
my_peps
my_peps = my_seq %>% pep_chop(9) %>% pluck(1)
my_peps
length(my_peps)
head(my_peps, 10)
write_tsv(my_peps, path = '~/Desktop/peps.txt')
write_delim(my_peps, path = '~/Desktop/peps.txt')
write_tsv(as_tibble(my_peps), path = '~/Desktop/peps.txt')
write_tsv(as_tibble(my_peps), path = '~/Desktop/peps.txt', col_names = FALSE)
write_tsv(as_tibble(my_peps), path = '~/Desktop/my_peps.txt')
write_tsv(as_tibble(my_peps), path = '~/Desktop/my_peps.txt', col_names = FALSE)
read_tsv(file = '~/Desktop/25127_NetMHCpan.xls')
read_tsv(file = '~/Desktop/25127_NetMHCpan.xls', skip = 1)
my_preds = read_tsv(file = '~/Desktop/25127_NetMHCpan.xls', skip = 1)
my_preds
my_preds %>% arrange(Rank)
my_preds %>% arrange(Rank) %>% filter(Rank <= 2)
my_preds %>% arrange(Rank) %>% filter(Rank <= 2) %>% pull(Peptide)
my_preds %>% arrange(Rank) %>% filter(Rank <= 2) %>% pull(Peptide) %>% ggseqlogo()
my_preds %>% arrange(Rank) %>% filter(Rank <= 2) %>% View
my_preds %>% filter(Rank <= 2) %>% View
my_binders = my_preds %>% filter(Rank <= 2) %>% pull(Peptide)
my_binders
my_binders %>% pssm_counts()
my_binders %>% pssm_freqs()
read_csv(file = '~/Downloads/results (2).csv')
read_tsv(file = '~/Downloads/results (2).csv')
dev.off()
dev.off()
roxygen2::roxygenise()
library(PepTools2)
library(PepTools2)
